BuilderLtl: Parsing LTL formula begin.
BuilderLtl: Parsing LTL formula end.
BuilderLtl: Replacing equivalences in LTL formula begin.
BuilderLtl: Replacing equivalences in LTL formula end.
BuilderLtl: Transforming LTL formula to NNF begin.
BuilderLtl: Transforming LTL formula to NNF end.
BuilderLtl: Simplifying LTL formula begin.
BuilderLtl: number of nodes in syntax tree before LTL simplification: 93
BuilderLtl: number of nodes in syntax tree after LTL simplification: 83
BuilderLtl: Simplifying LTL formula end.
BuilderLtl: Translating LTL formula to SNF begin.
BuilderLtl: number of top level LTL subformulas directly turned into SNF clauses: 6
BuilderLtl: number of formula to SNF cache hits: 10
BuilderLtl: number of formula to SNF cache misses: 60
BuilderLtl: Translating LTL formula to SNF end.
BuilderLtl: Simplifying SNF begin.
BuilderLtl: number of clauses before pure literal simplification: 74
BuilderLtl: number of clauses after pure literal simplification: 74
BuilderLtl: Simplifying SNF end.
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
Number of generated resolvents: 14430
Number of forward subsumed clauses: 418
Number of backward subsumed clauses: 5565
Number of individual subsumed clauses: 9612
Total number of subsumed clauses: 15595
Simplified by FSR: 0
Number of successful applications of the sometime resolution: 19
Number of nonredundand applications of the sometime resolution: 8
Number of failed applications of the sometime resolution: 0
ResolutionGraph: computing reachable subgraph from empty clause begin
ResolutionGraph: computing reachable subgraph from empty clause end
ResolutionGraph: computing core starting clauses begin
ResolutionGraph: computing core starting clauses end
ResolutionGraph: peak number of vertices: 3621
ResolutionGraph: peak number of edges: 6131
ResolutionGraph: peak number of vertices + edges: 9752
ResolutionGraph: number of vertices before pruning to reachable vertices: 3621
ResolutionGraph: number of edges before pruning to reachable vertices: 6131
ResolutionGraph: number of vertices after pruning to reachable vertices: 702
ResolutionGraph: number of edges after pruning to reachable vertices: 1155
ResolutionGraph: number of clauses in input problem: 74
ResolutionGraph: number of clauses in unsatisfiable core: 65
MapperSnfToLtl: number of nodes in syntax tree of input problem: 93
MapperSnfToLtl: number of nodes in syntax tree of unsatisfiable core: 84
MainAux: number of nodes in syntax tree before LTL simplification: 93
MainAux: number of nodes in syntax tree after LTL simplification: 83
MainAux: number of nodes in syntax tree of proof core: 84
Unsatisfiable
The following is an unsatisfiable core:
(rr_r_00000) & 
(rr_r_00001) & 
(rr_r_00002) & 
(rr_r_00003) & 
(rr_r_00004) & 
((~ (rr_r_00000)) | (sometime (always (((a1) | (a5)) & ((~ (a1)) | (~ (a5))))))) & 
((~ (rr_r_00001)) | (sometime (always (((a4) | (~ (a5))) & ((a5) | (~ (a4))))))) & 
((~ (rr_r_00002)) | (sometime (always (((a3) | (~ (a4))) & ((a4) | (~ (a3))))))) & 
((~ (rr_r_00003)) | (sometime (always (((a2) | (~ (a3))) & ((a3) | (~ (a2))))))) & 
((~ (rr_r_00004)) | (sometime (always (((a1) | (~ (a2))) & ((a2) | (~ (a1)))))))
End of unsatisfiable core.
Elapsed time 0.187s
