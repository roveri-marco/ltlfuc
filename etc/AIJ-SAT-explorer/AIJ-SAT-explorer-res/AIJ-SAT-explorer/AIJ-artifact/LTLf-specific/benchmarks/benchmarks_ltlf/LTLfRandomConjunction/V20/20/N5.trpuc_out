BuilderLtl: Parsing LTL formula begin.
BuilderLtl: Parsing LTL formula end.
BuilderLtl: Replacing equivalences in LTL formula begin.
BuilderLtl: Replacing equivalences in LTL formula end.
BuilderLtl: Transforming LTL formula to NNF begin.
BuilderLtl: Transforming LTL formula to NNF end.
BuilderLtl: Simplifying LTL formula begin.
BuilderLtl: number of nodes in syntax tree before LTL simplification: 364
BuilderLtl: number of nodes in syntax tree after LTL simplification: 286
BuilderLtl: Simplifying LTL formula end.
BuilderLtl: Translating LTL formula to SNF begin.
BuilderLtl: number of top level LTL subformulas directly turned into SNF clauses: 28
BuilderLtl: number of formula to SNF cache hits: 34
BuilderLtl: number of formula to SNF cache misses: 194
BuilderLtl: Translating LTL formula to SNF end.
BuilderLtl: Simplifying SNF begin.
BuilderLtl: number of clauses before pure literal simplification: 254
BuilderLtl: number of clauses after pure literal simplification: 205
BuilderLtl: Simplifying SNF end.
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
ResolutionGraph: computing reachable subgraph from main partition begin
ResolutionGraph: computing reachable subgraph from main partition end
Number of generated resolvents: 1042
Number of forward subsumed clauses: 198
Number of backward subsumed clauses: 1054
Number of individual subsumed clauses: 130
Total number of subsumed clauses: 1382
Simplified by FSR: 0
Number of successful applications of the sometime resolution: 19
Number of nonredundand applications of the sometime resolution: 6
Number of failed applications of the sometime resolution: 2
ResolutionGraph: computing reachable subgraph from empty clause begin
ResolutionGraph: computing reachable subgraph from empty clause end
ResolutionGraph: computing core starting clauses begin
ResolutionGraph: computing core starting clauses end
ResolutionGraph: peak number of vertices: 1241
ResolutionGraph: peak number of edges: 1540
ResolutionGraph: peak number of vertices + edges: 2781
ResolutionGraph: number of vertices before pruning to reachable vertices: 1219
ResolutionGraph: number of edges before pruning to reachable vertices: 1498
ResolutionGraph: number of vertices after pruning to reachable vertices: 37
ResolutionGraph: number of edges after pruning to reachable vertices: 43
ResolutionGraph: number of clauses in input problem: 205
ResolutionGraph: number of clauses in unsatisfiable core: 14
MapperSnfToLtl: number of nodes in syntax tree of input problem: 339
MapperSnfToLtl: number of nodes in syntax tree of unsatisfiable core: 16
MainAux: number of nodes in syntax tree before LTL simplification: 364
MainAux: number of nodes in syntax tree after LTL simplification: 286
MainAux: number of nodes in syntax tree of proof core: 16
Unsatisfiable
The following is an unsatisfiable core:
(rr_r_00010) & 
(rr_r_00026) & 
((~ (rr_r_00010)) | (sometime (p17))) & 
((~ (rr_r_00026)) | (always (~ (p17))))
End of unsatisfiable core.
Elapsed time 0.115s
